<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 将空间改为接口中的全类名-->
<mapper namespace="cn.edu.usts.cs2018.dao.mapper.UserMapper">

    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="cn.edu.usts.cs2018.entity.User">
        <id property="userid" column="userid" javaType="java.lang.Integer"></id>
        <result property="username" column="username" javaType="java.lang.String"></result>
        <result property="password" column="password" javaType="java.lang.String"></result>
        <result property="telephone" column="telephone" javaType="java.lang.String"></result>
        <result property="address" column="address" javaType="java.lang.String"></result>
    </resultMap>

    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。
    parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys:(仅 对 insert 有用) 告诉 MyBatis 使 用 JDBC 的getGeneratedKeys
      方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty:(仅对 insert有用)标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->

    <!-- 将以下ID改为接口中的方法名-->
    <!--查询-->
    <select id="getUserById" parameterType="int" resultType="User">
        select * from user where userid = #{userid}
    </select>

    <select id="findUser"  parameterType="String" resultType="User">
        select * from user where username = #{arg0} and password = #{arg1}
    </select>

    <!-- 查询2-->
    <select id="selectAll" resultMap="userMap">
        select * from user
    </select>

    <!-- 查询3-->
    <select id="select" resultMap="userMap">
        select * from user where telephone = #{strWhere}
    </select>

    <!--插入-->
    <insert id="add" parameterType="cn.edu.usts.cs2018.entity.User" keyProperty="userid">
        insert into user(userid,username, password, telephone, address)
            value (#{userid},#{username},#{password},#{telephone},#{address})
    </insert>

    <!--更新-->
    <update id="update" parameterType="cn.edu.usts.cs2018.entity.User">
        update user
        set username=#{username},password=#{password},telephone=#{telephone},address=#{address}
        where userid=#{userid}
    </update>

    <!-- 删除-->
    <delete id="deleteById">
        delete from user where userid=#{userid}
    </delete>


</mapper>